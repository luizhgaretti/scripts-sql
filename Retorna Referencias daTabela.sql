/* 
===========================================================================
=   Esta procedure é utilizada para listar as Foreign Keys da base.       =
=   Os parâmetros da procedure são: TABELA								  =
=   Utilizando:														      =
=     TABELA = '' - lista todas as fks existentes na base			      =	
=     TABELA = 'NomeTabela' - lista todas as fks da tabela referenciada   = 
===========================================================================
*/

CREATE PROCEDURE DBA_LISTA_FK(@TABELA VARCHAR(30))
AS
BEGIN
   DECLARE @ID_FK VARCHAR(30), @TAB1 VARCHAR(30), @TAB2 VARCHAR(30), 
           @FKEY VARCHAR(30), @RKEY VARCHAR(30), @FKEYS VARCHAR(30), @RKEYS VARCHAR(30),
           @SELECT1 VARCHAR(8000),@X INT, @NOME_FK VARCHAR(30), @ACFKEYS VARCHAR(255),
           @ACRKEYS VARCHAR(255),@CMD VARCHAR(255)

   SELECT @ID_FK = ''
   SELECT @TAB1 = ''
   SELECT @TAB2 = ''
   SELECT @FKEY = ''
   SELECT @RKEY = ''
   SELECT @FKEYS = ''
   SELECT @RKEYS = ''
   SELECT @SELECT1 = ''
   SELECT @X = 0
   SELECT @ACFKEYS = ''
   SELECT @ACRKEYS = ''
   SELECT @CMD = ''

   --CRIANDO TABELA TEMP
   CREATE TABLE #DBA_LISTA_FK
         (CMD VARCHAR(255),
          TAB1 VARCHAR(30),
          TAB2 VARCHAR(30),
          ACFKEYS VARCHAR(255),
          ACRKEYS VARCHAR(255))

   IF (@TABELA = '')
      DECLARE CURSOR_CONST CURSOR LOCAL FOR
         SELECT ID,NAME FROM SYSOBJECTS WHERE XTYPE='F' ORDER BY OBJECT_NAME(PARENT_OBJ)
   ELSE
      DECLARE CURSOR_CONST CURSOR LOCAL FOR
         SELECT ID,NAME FROM SYSOBJECTS WHERE XTYPE='F' AND PARENT_OBJ=OBJECT_ID(@TABELA)
           ORDER BY OBJECT_NAME(PARENT_OBJ)

   OPEN CURSOR_CONST
   FETCH NEXT FROM CURSOR_CONST INTO @ID_FK, @NOME_FK

   WHILE (@@FETCH_STATUS) = 0
   BEGIN
      SELECT @CMD = 'ALTER TABLE '+ OBJECT_NAME(@TAB1) + ' DROP CONSTRAINT ' + OBJECT_NAME(@ID_FK) + ';'

      SELECT @TAB1 = FKEYID, @TAB2 = RKEYID
             FROM SYSREFERENCES WHERE CONSTID=@ID_FK

      DECLARE CURSOR_KEY CURSOR LOCAL FOR
         SELECT FKEY, RKEY
             FROM SYSFOREIGNKEYS WHERE CONSTID=@ID_FK

      OPEN CURSOR_KEY
      FETCH NEXT FROM CURSOR_KEY INTO @FKEY, @RKEY

      WHILE (@@FETCH_STATUS) = 0
      BEGIN
         SELECT @FKEYS = NAME FROM SYSCOLUMNS WHERE ID=@TAB1 AND COLID=@FKEY
         SELECT @RKEYS = NAME FROM SYSCOLUMNS WHERE ID=@TAB2 AND COLID=@RKEY
         --ARMAZENANDO FKEYS E RKEYS
         SELECT @ACFKEYS = @ACFKEYS + @FKEYS + ','
         SELECT @ACRKEYS = @ACRKEYS + @RKEYS + ','
         FETCH NEXT FROM CURSOR_KEY INTO @FKEY, @RKEY
      END
      CLOSE CURSOR_KEY
      DEALLOCATE CURSOR_KEY

      SELECT @ACFKEYS = SUBSTRING(@ACFKEYS, 1, LEN(@ACFKEYS)-1)
      SELECT @ACRKEYS = SUBSTRING(@ACRKEYS, 1, LEN(@ACRKEYS)-1)

      INSERT INTO #DBA_LISTA_FK VALUES(@CMD,@TAB1,@TAB2,@ACFKEYS,@ACRKEYS)

      SELECT @ACFKEYS = ''
      SELECT @ACRKEYS = ''
      SELECT @CMD = ''

      FETCH NEXT FROM CURSOR_CONST INTO @ID_FK, @NOME_FK
   END
   CLOSE CURSOR_CONST 
   DEALLOCATE CURSOR_CONST

   SELECT OBJECT_NAME(TAB1)+ '(' + ACFKEYS + ')' + ' || ' + OBJECT_NAME(TAB2) + '(' + ACRKEYS + ')' AS FK, CMD AS COMANDO
   FROM #DBA_LISTA_FK
   ORDER BY FK

   EXEC('DROP TABLE #DBA_LISTA_FK')
END
go

EXECUTE DBA_LISTA_FK 'entidade'
GO